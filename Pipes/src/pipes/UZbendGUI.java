/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package pipes;

/**
 *
 * @author Ross
 */
import java.awt.Color;

public class UZbendGUI extends javax.swing.JFrame {

    /**
     * Creates new form ZbendGUI
     */
    public UZbendGUI() {
        initComponents();
        textArea.setEditable(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        butBack = new javax.swing.JButton();
        tFID = new javax.swing.JTextField();
        lWeight = new javax.swing.JLabel();
        tFSize = new javax.swing.JTextField();
        lID = new javax.swing.JLabel();
        lSize = new javax.swing.JLabel();
        tFWeight = new javax.swing.JTextField();
        lShortLeg = new javax.swing.JLabel();
        lLongLeg = new javax.swing.JLabel();
        lHorizontal = new javax.swing.JLabel();
        tFShort = new javax.swing.JTextField();
        tFLong = new javax.swing.JTextField();
        tFHorizontal = new javax.swing.JTextField();
        butCurve = new javax.swing.JButton();
        panel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        textArea = new javax.swing.JTextArea();
        cBService = new javax.swing.JComboBox();
        cBMaterial = new javax.swing.JComboBox();
        lService = new javax.swing.JLabel();
        tFShapeFactor = new javax.swing.JTextField();
        lMaterial = new javax.swing.JLabel();
        lShapeFactor = new javax.swing.JLabel();
        tFMaxTemp = new javax.swing.JTextField();
        lMaxTemp = new javax.swing.JLabel();
        lMinTemp = new javax.swing.JLabel();
        tFMinTemp = new javax.swing.JTextField();
        butCalculate = new javax.swing.JButton();
        butPrint = new javax.swing.JButton();
        butClearTA = new javax.swing.JButton();
        butClear = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("U- and Z-Bend");

        butBack.setText("Back to Start");
        butBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butBackActionPerformed(evt);
            }
        });

        lWeight.setText("Pipe weight (sch.)");

        lID.setText("Bend ID :");

        lSize.setText("Pipe size (inches)");

        lShortLeg.setText("Length of short vertical (mm):");

        lLongLeg.setText("Length of long vertical (mm):");

        lHorizontal.setText("Length of horizontal off set (mm):");

        butCurve.setText("Get curve to read");
        butCurve.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butCurveActionPerformed(evt);
            }
        });

        panel.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        textArea.setColumns(20);
        textArea.setRows(5);
        jScrollPane1.setViewportView(textArea);

        javax.swing.GroupLayout panelLayout = new javax.swing.GroupLayout(panel);
        panel.setLayout(panelLayout);
        panelLayout.setHorizontalGroup(
            panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 329, Short.MAX_VALUE)
                .addContainerGap())
        );
        panelLayout.setVerticalGroup(
            panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 156, Short.MAX_VALUE)
                .addContainerGap())
        );

        cBService.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Select", "Power", "Oil" }));

        cBMaterial.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Select", "Carbon steel grade A", "Carbon steel grade B", "Carbon Moly", "Low Chrome Moly", "Annealed Nickel", "Annealed Monel", "Aluminum 3003-H112", "Aluminum 5154-H112", "Aluminum 6061-T6", "Medium Chrome Moly", "Austenitic Stainless" }));

        lService.setText("Service");

        lMaterial.setText("Pipe material");

        lShapeFactor.setText("Shape factor");

        lMaxTemp.setText("Maximum temperature (°C)");

        lMinTemp.setText("Minimum temperature (°C)");

        butCalculate.setText("Calculate");
        butCalculate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butCalculateActionPerformed(evt);
            }
        });

        butPrint.setText("Print");
        butPrint.setToolTipText("Print a hard copy or save details as PDF.");
        butPrint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butPrintActionPerformed(evt);
            }
        });

        butClearTA.setText("Clear text area");
        butClearTA.setToolTipText("Clear the text area of all text.");
        butClearTA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butClearTAActionPerformed(evt);
            }
        });

        butClear.setText("Clear all");
        butClear.setToolTipText("Clear all text fields and the text area of text.");
        butClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butClearActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(37, 37, 37)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lID)
                                .addGap(137, 137, 137)
                                .addComponent(tFID, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(lSize)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(tFSize, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(lWeight)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(tFWeight, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(lShortLeg)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(tFShort, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(lLongLeg)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(tFLong, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(lHorizontal)
                                    .addGap(18, 18, 18)
                                    .addComponent(tFHorizontal, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(lShapeFactor, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lMaterial, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lService, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lMaxTemp, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lMinTemp, javax.swing.GroupLayout.Alignment.LEADING)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(175, 175, 175)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(tFMinTemp, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tFMaxTemp, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cBService, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tFShapeFactor, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cBMaterial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(257, 257, 257)
                        .addComponent(butCalculate))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(201, 201, 201)
                        .addComponent(butCurve))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(panel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(butClearTA, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(butClear, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(butPrint, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(butBack))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lID)
                    .addComponent(tFID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(4, 4, 4)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lSize)
                    .addComponent(tFSize, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lWeight)
                    .addComponent(tFWeight, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lShortLeg)
                    .addComponent(tFShort, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lLongLeg)
                    .addComponent(tFLong, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lHorizontal)
                    .addComponent(tFHorizontal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(butCurve)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tFShapeFactor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lShapeFactor))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cBMaterial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lMaterial))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lService)
                    .addComponent(cBService, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lMaxTemp)
                    .addComponent(tFMaxTemp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lMinTemp)
                    .addComponent(tFMinTemp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(butCalculate)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(butClearTA)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(butClear)
                        .addGap(18, 18, 18)
                        .addComponent(butPrint)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(butBack))
                    .addComponent(panel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void butBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butBackActionPerformed
        tFID.setText("");
        tFLong.setText("");
        tFShort.setText("");
        tFHorizontal.setText("");
        tFMaxTemp.setText("");
        tFMinTemp.setText("");
        tFShapeFactor.setText("");
        tFSize.setText("");
        tFWeight.setText("");
        textArea.setText("");
        cBMaterial.setSelectedIndex(0);
        cBService.setSelectedIndex(0);
        panel.setBackground(driver.colour("default"));
        gui.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_butBackActionPerformed

    private void butPrintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butPrintActionPerformed
        String[] ar = new String[12];//declare array and numberof elements
        int nrE = 0;

        if (cBMaterial.getSelectedIndex() != 0 & cBService.getSelectedIndex() != 0) {
            //fill array
            ar[nrE] = "ID: " + tFID.getText();
            nrE++;//=1
            ar[nrE] = "Size: " + tFSize.getText();
            nrE++;// nrE = 
            ar[nrE] = "Schedule: " + tFWeight.getText();
            nrE++;
            ar[nrE] = "Short leg (mm): " + tFShort.getText();
            nrE++;
            ar[nrE] = "Long leg (mm): " + tFLong.getText();
            nrE++;
            ar[nrE] = "Horizontal offset: " + tFHorizontal.getText();
            nrE++;
            ar[nrE] = "Material: " + driver.getSelectedMaterial(cBMaterial.getSelectedIndex());
            nrE++;
            ar[nrE] = "Service: " + driver.GetService(cBService.getSelectedIndex());
            nrE++;
            ar[nrE] = "Maximum temperature (°C): " + tFMaxTemp.getText();
            nrE++;
            ar[nrE] = "Minimum temperature (°C): " + tFMinTemp.getText();
            nrE++;// nrE = 10

            ar[nrE] = "Maximum allowable stress: " + Sa;// global variable
            nrE++; // = 11

            ar[nrE] = "Computed Stress Range: " + Se;//global variable
            nrE++;// = 12

            Print_Something ps = new Print_Something(ar);
        } else {
            driver.infoMessageNormal("Please make sure that both service and material are selected.");
        }
    }//GEN-LAST:event_butPrintActionPerformed

    private void butClearTAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butClearTAActionPerformed
        textArea.setText("");
        panel.setBackground(driver.colour("default"));
    }//GEN-LAST:event_butClearTAActionPerformed

    private void butClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butClearActionPerformed
        tFID.setText("");
        tFLong.setText("");
        tFShort.setText("");
        tFHorizontal.setText("");
        tFMaxTemp.setText("");
        tFMinTemp.setText("");
        tFShapeFactor.setText("");
        tFSize.setText("");
        tFWeight.setText("");
        textArea.setText("");
        cBMaterial.setSelectedIndex(0);
        cBService.setSelectedIndex(0);
        panel.setBackground(driver.colour("default"));
    }//GEN-LAST:event_butClearActionPerformed

    private void butCalculateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butCalculateActionPerformed
        try {
            Fs = Double.parseDouble(tFShapeFactor.getText());//get shape factor from text Field.

            int matIndex = cBMaterial.getSelectedIndex();//get parameters
            int servIndex = cBService.getSelectedIndex();
            double hot = driver.CtoF(Double.parseDouble(tFMaxTemp.getText()));
            double cold = driver.CtoF(Double.parseDouble(tFMinTemp.getText()));
            boolean temp = false;//to check temperatures are correct

            if (hot > cold) {//check that hot is higher than cold
                temp = true;
            }

            //calculate if all parameters are int the correct format
            if ((matIndex != 0) & (servIndex != 0) & (Fs != 0) & (temp)) {
                //get service and material
                String material = driver.getSelectedMaterial(matIndex);
                String service = driver.GetService(servIndex);

                Fe = driver.ExpansionFactor(matIndex, hot, cold);
                Sa = driver.GetAllowableStress(matIndex, servIndex, hot);

                if (Sa == 0) {
                    driver.errorMessageNormal("Temperatures entered not valid for\n"
                            + "type of pipe selected");
                }

                Se = (Fe * Fs) / Fl;//do final calculation

                
                textArea.append("Maximum allowable stress:" + Sa + "\n");//inform user of results
                textArea.append("Computed Stress Range: " + Se + "\n\n");

                if (Se < Sa) {//determine colour depending on whether the system is safe or not
                    textArea.append("The actual range is LESS than the maximum allowable stress\n\n");
                    panel.setBackground(Color.green); //set panel to green
                } else {
                    textArea.append("The actual range is MORE than the maximum allowable stress\n\n");
                    panel.setBackground(Color.red);
                }
            } else {//inform user of incorrect values.
                if (Fs == 0) {
                    driver.errorMessageNormal("Please enter the shape factor. It may not be equal to 0.");
                } else {
                    if (temp == false) {
                        driver.errorMessageNormal("Please make sure that the maximum temperature is higher\n"
                                + " than the minimum temperature");
                    } else {
                        driver.errorMessageNormal("Please select the material and service");
                    }
                }
            }
        } catch (NumberFormatException nfe) {
            driver.errorMessageNormal("Please make sure that the values entered for the \n"
                    + "temperatures and shape factor are correct. Only digits, not any other characters,\n"
                    + " should be entered");
        } catch (Exception e) {
            driver.errorMessageNormal("From CalculateActionPerformed: " + e);
        }
    }//GEN-LAST:event_butCalculateActionPerformed

    private void butCurveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butCurveActionPerformed
        boolean lengths = false;//vaiable to check values are entered and correct
        boolean shortLong = false;
        String size = tFSize.getText();//For getting effective length
        String weight = tFWeight.getText();
        double w = Double.parseDouble(tFHorizontal.getText());


        //check that size and weight have been entered
        if ((size.length() != 0) & (weight.length() != 0)) {
            lengths = true;
        }

        try {
            double h = Double.parseDouble(tFShort.getText());//get parameters
            double H = Double.parseDouble(tFLong.getText());
            if (H > h) {//check that LongLeg is greater than shortLeg
                shortLong = true;
            }

            if (shortLong & lengths) {//continue if values are entered and correct
                double abs = driver.abscissa(H, h);//variable 

                double curve = driver.CurveAt(H, w);
                textArea.append("Pipe section ID: " + tFID.getText()+"\n");
                textArea.append("Read the shape factor on Chart 3 at " + abs + " and curve " + curve + ".\n");
                textArea.append("Enter the shape factor into its text field.\n\n");

                //Get effective elbow diameter=======================================
                Fl = driver.DiameterLength(h, H, w, size, weight);
                //System.out.println("4");
                //===================================================================

            } else {
                if (lengths == false) {
                    driver.errorMessageNormal("Please enter the size and weight of the pipes.");
                } else {

                    driver.errorMessageNormal("Make sure that the length entered for the long leg is\n"
                            + "greater than the length entered for the short leg.");
                }
            }
        } catch (NumberFormatException nfe) {
            driver.errorMessageNormal("Please make sure that the values entered for the \n"
                    + "short leg and long leg are correct. Only digits, not any other characters,\n"
                    + " should be entered");
        } catch (Exception e) {
            driver.errorMessageNormal("From GetCurveActionPerformed: " + e);
        }
    }//GEN-LAST:event_butCurveActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UZbendGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UZbendGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UZbendGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UZbendGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new UZbendGUI().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton butBack;
    private javax.swing.JButton butCalculate;
    private javax.swing.JButton butClear;
    private javax.swing.JButton butClearTA;
    private javax.swing.JButton butCurve;
    private javax.swing.JButton butPrint;
    private javax.swing.JComboBox cBMaterial;
    private javax.swing.JComboBox cBService;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lHorizontal;
    private javax.swing.JLabel lID;
    private javax.swing.JLabel lLongLeg;
    private javax.swing.JLabel lMaterial;
    private javax.swing.JLabel lMaxTemp;
    private javax.swing.JLabel lMinTemp;
    private javax.swing.JLabel lService;
    private javax.swing.JLabel lShapeFactor;
    private javax.swing.JLabel lShortLeg;
    private javax.swing.JLabel lSize;
    private javax.swing.JLabel lWeight;
    private javax.swing.JPanel panel;
    private javax.swing.JTextField tFHorizontal;
    private javax.swing.JTextField tFID;
    private javax.swing.JTextField tFLong;
    private javax.swing.JTextField tFMaxTemp;
    private javax.swing.JTextField tFMinTemp;
    private javax.swing.JTextField tFShapeFactor;
    private javax.swing.JTextField tFShort;
    private javax.swing.JTextField tFSize;
    private javax.swing.JTextField tFWeight;
    private javax.swing.JTextArea textArea;
    // End of variables declaration//GEN-END:variables
    FirstGUI gui = new FirstGUI();
    Driver driver = new Driver();
    double Fs = 0;//variables for final clculation
    double Fl = 0;
    double Fe = 0;
    double Sa = 0;
    double Se = 0;
}
